enum T_adhésion {'bronze', 'argent', 'or'} // Exemple

// La gestion des comptes administrateurs serait plus judicieuse si l'on gérait les permissions avec une table d'association. 
// L'héritage administrateur disparaît pour une gestion plus astucieuse avec des roles.

// L'héritage adhérant n'a pas besoin d'être géré. Un adhérant n'est qu'une spécialisation vide d'un utilisateur.

Roles ( 
    #id_role : SERIAL {PRIMARY KEY},
    nom_role : string {not null} // Utilisateur, ou admin
)

Utilisateur (
    #id_user : SERIAL {PRIMARY KEY},
    nom : string {not null},
    prenom : string {not null},
    mdp : string {not null},
    vnom : bool {not null},
    vprenom : bool {not null},
    vphoto : bool {not null},
    date_inscription : date {not null},
    date_derniere_connexion : date {not null},
    adresse : string,
    email : string,
    phone : string,
    website : string,
)   

Role_utilisateur (
    #id_role => Role.id_role,
    #id_user => Utilisateur.id_user,
    PRIMARY KEY (id_role, id_user)
)

Adhésion (
    #id_adhésion = SERIAL {PRIMARY KEY}
    id_user => Utilisateur.id_user,
    date_expiration : date,
    montant : float {not null},
    type_adhésion : T_adhésion {not null},
)

Donateur (
    #id_donateur : SERIAL {PRIMARY KEY}
)

Donateur_info (
    #id_donateur => Donateur.id_donateur
    nom : string,
    prenom : string
)

Donateur_utilisateur (
    #id_donateur => Donateur.id_donateur,
    #id_user => Utilisateur.id_user {UNIQUE},
    PRIMARY KEY (id_donateur, id_user)
)

Don {
    #id_don : SERIAL {PRIMARY KEY},
    date : date {not null},
    montant : float {not null},
    #id_donateur => Donateur.id_donateur,
}

Fichier (
    #id_fichier : SERIAL {PRIMARY KEY},
    chemin : string {not null},
    titre : string {not null},
    date_telechargement : date {not null}
)

PP (
    #id_photo => Fichier.id_fichier,
    #id_user => Utilisateur.id_user,
    PRIMARY KEY (id_photo, id_user)
)

Groupe (
    #id_groupe : SERIAL {PRIMARY KEY},
    titre : string,
    description : string
)

Membre_groupe (
    #id_groupe => Groupe.id_groupe,
    #id_user => Utilisateur.id_user,
    PRIMARY KEY (id_groupe, id_user)
)

Fichier_groupe (
    #id_photo => Fichier.id_fichier,
    #id_groupe => Groupe.id_groupe,
    PRIMARY KEY (id_photo, id_groupe)
)

URL (
    #id_url : SERIAL {PRIMARY KEY},
    url : string {not null},
    titre : string {not null},
)

URL_groupe (
    #id_url => URL.id_url,
    #id_groupe => Groupe.id_groupe,
    PRIMARY KEY (id_url, id_groupe)
)

Evt (
    #id_evt : SERIAL {PRIMARY KEY},
    evt : string {not null},
    date : string {not null} {"format vCal"},
)

Evt_groupe (
    #id_evt => Evt.id_evt,
    #id_groupe => Groupe.id_groupe,
    PRIMARY KEY (id_evt, id_groupe)
)


archive_utilisateur (
    #id_user : SERIAL {PRIMARY KEY},
    nom : string {not null},
    prenom : string {not null},
    mdp : string {not null},
    vnom : bool {not null},
    vprenom : bool {not null},
    vphoto : bool {not null},
    date_inscription : date {not null},
    date_derniere_connexion : date {not null},
    adresse : string,
    email : string,
    phone : string,
    website : string
)   

archive_role_utilisateur (
    #id_role => Role.id_role,
    #id_user => archive_utilisateur.id_user,
    PRIMARY KEY (id_role, id_user)
)

archive_adhésion (
    #id_user => archive_utilisateur.id_user,
    #date_expiration : date,
    montant : float {not null},
    type : T_adhésion {not null},
    PRIMARY KEY (id_user, date_expiration)
)

archive_donateur (
    #id_donateur : SERIAL {PRIMARY KEY},
    nom : string,
    prenom : string
)

archive_donateur_utilisateur (
    #id_donateur => archive_donateur.id_donateur,
    #id_user => archive_utilisateur.id_user,
    PRIMARY KEY (id_donateur, id_user)
)

archive_don {
    #id_don : SERIAL {PRIMARY KEY},
    date : date {not null},
    montant : float {not null},
    #id_donateur => archive_donateur.id_donateur,
}
Vue Autorisation Utilisateurs :

vAutorisationsUtilisateurs = PROJECTION(Utilisateur, 
                                    Utilisateur.id_user,
                                    Utilisateur.vprenom,
                                    Utilisateur.vnom,
                                    Utilisateur.vphoto
)


Vue Profil Utilisateur :

R1 = JOINTURE(PP, Utilisateur, PP.id_user = Utilisateur.id_user)
R2 = JOINTURE(R1, Fichier, R1.id_photo = Fichier.id_fichier)
R3 = RESTRICTION (Adhésion, date_expiration > today)
R4 = JOINTURE (R2, R3, R2.id_user = R3.id_user))
vProfilUtilisateur = PROJECTION (R4, 
                                R4.R1.id_user,
                                R4.nom,
                                R4.prenom,
                                R4.date_inscription,
                                R4.date_derniere_connexion,
                                R4.chemin, // Chemin vers photo de profil
                                R4.type,
                                R4.date_expiration
)

Vue Adhérants Actuels :

R1 = RESTRICTION (Adhésion, date_expiration > today)
R2 = JOINTURE (Utilisateur, Adhésion, Utilisateur.id_user = Adhésion.id_user)
R3 = JOINTURE (R2, PP, R2.id_user = PP.id_user)
R4 = JOINTURE(R3, Fichier, R3.id_photo = Fichier.id_fichier)
R5 = PROJECTION (R4, 
                R4.R2.id_user,
                R4.nom,
                R4.prénom,
                R4.chemin // chemin vers photo de profil
)
On peut trier par ordre alphabétique des noms de famille.

Vue ex-adhérants :

R1 = RESTRICTION (Adhésion, date_expiration < today)
R2 = PROJECTION(R1, R1.id_user, R1.type, MAX(R1.date_expiration)) GROUP BY R1.id_user
// On obtient dans R2 la listes des utilisateurs dont l'adhésion a expiré, associé à leur adhésion la plus récente. 
R3 = JOINTURE(Utilisateur, R2, Utilisateur.id_user = R2.id_user)
R4 = JOINTURE(R3, PP, R3.id_user = PP.id_user)
R5 = JOINTURE(R4, Fichier, R4.id_photo = Fichier.id_fichier)
vExAdhérants = PROJECTION(R5, 
                        R5.R4.R3.R2.R1.id_user,
                        R5.nom,
                        R5.prenom,
                        R5.chemin // chemin vers photo de profil
)

Vue Adhésion expirant bientôt : 
Durée : 1 an, 1 mois, ...
R1 = RESTRICTION (Adhésion, date_expiration > today)
R2 = PROJECTION(R1, R1.id_user, date_expiration - Durée AS limite)
R3 = RESTRICTION(R2, limite < today)
R4 = JOINTURE(R3, Utilisateur, R3.id_user = Utilisateur.id_user)
R5 = JOINTURE(R4, PP, R4.id_user = Utilisateur.id_user)
R6 = JOINTURE(R5, Fichier, R5.id_photo = Fichier.id_fichier)
R6 = PROJECTION(R5,
                R5.R4.R3.id_user,
                R5.nom,
                R5.prenom,
                R5.limite,
                R5.chemin
)

Vue Donateurs-Dons :

R1 = JOINTURE_EXTERNE_GAUCHE(Donateur, Donateur_utilisateur, Donateur.id_donateur = Donateur_utilisateur.id_donateur)
R2 = JOINTURE_EXTERNE_GAUCHE(R1, Donateur_info, R1.id_donateur = Donateur_info.id_donateur)
R3 = JOINTURE_EXTERNE_GAUCHE(R2, Utilisateur, R2.id_user = Utilisateur.id_user)
vDonateursDons = JOINTURE_EXTERNE_GAUCHE(R3, Don, R3.id_donateur = Don.id_donateur)

Vue DonateursUtilisateurs :

R1 = JOINTURE(Donateur, Donateur_utilisateur, Donateur.id_donateur = Donateur_utilisateur.id_donateur)
vDonateursUtilisateurs = JOINTURE(R1, Utilisateur, R1.id_user = Utilisateur.id_user)

Vue Historique adhésions non archivés:

R1 = RESTRICTION(Adhésion, date_expiration < today)
R2 = JOINTURE(Utilisateur, R1, Utilisateur.id_user = R1.id_user)
R3 = PROJECTION(R3, 
                R3.R2.R1.id_user,
                R3.date_expiration,
                R3.montant,
                R3.type,
)

Vue Membre_Groupe :

R1 = JOINTURE(Groupe, Membre_groupe, Groupe.id_groupe= Membre_groupe.id_groupe)
R2 = JOINTURE(R1, Utilisateur, R1.id_user = Utilisateur.id_user)
R3 = JOINTURE(R2, PP, R2.id_user = PP.id_user)
R4 = JOINTURE(R3, Fichier, R3.id_photo = Fichier.id_fichier)
vMembreGroupe = PROJECTION(R4,
                        R4.id_groupe,
                        R4.titre,
                        R4.R3.R2.R1.id_user,
                        R4.nom,
                        R4.prenom,
                        R4.chemin,
)

Vue Info Groupe :

R1 = JOINTURE(Groupe, Fichier_groupe, Groupe.id_groupe = Fichier_groupe.id_groupe)
R2 = JOINTURE(R1, Fichier, R1.id_fichier = Fichier.id_fichier)
R3 = JOINTURE(R2, URL_groupe, R2.id_groupe = URL_groupe.id_groupe)
R4 = JOINTURE(R3, URL, R3.id_url = URL.id_url)
R5 = JOINTURE(R4, Evt_groupe, R4.id_groupe, Evt_groupe.id_groupe)
R6 = JOINTURE(R4, Evt, R4.id_evt = Evt.id_evt)
R7 = PROJECTION(R7,
                R7.R6.R5.R4.R3.id_groupe,
                Groupe.titre,
                Groupe.description,
                Fichier.chemin,
                Fichier.titre,
                URL.url,
                URL.titre,
                Evt.evt,
                Evt.date,
)

Les vues archives sont identiques aux vues utilisateurs/donateurs.

